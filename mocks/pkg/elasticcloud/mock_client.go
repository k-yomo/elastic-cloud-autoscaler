// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mock_elasticcloud is a generated GoMock package.
package mock_elasticcloud

import (
	context "context"
	reflect "reflect"

	models "github.com/elastic/cloud-sdk-go/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetESResourceInfo mocks base method.
func (m *MockClient) GetESResourceInfo(ctx context.Context, includePlanHistory bool) (*models.ElasticsearchResourceInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetESResourceInfo", ctx, includePlanHistory)
	ret0, _ := ret[0].(*models.ElasticsearchResourceInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetESResourceInfo indicates an expected call of GetESResourceInfo.
func (mr *MockClientMockRecorder) GetESResourceInfo(ctx, includePlanHistory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetESResourceInfo", reflect.TypeOf((*MockClient)(nil).GetESResourceInfo), ctx, includePlanHistory)
}

// UpdateESHotContentTopologySize mocks base method.
func (m *MockClient) UpdateESHotContentTopologySize(ctx context.Context, topology *models.TopologySize) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateESHotContentTopologySize", ctx, topology)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateESHotContentTopologySize indicates an expected call of UpdateESHotContentTopologySize.
func (mr *MockClientMockRecorder) UpdateESHotContentTopologySize(ctx, topology interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateESHotContentTopologySize", reflect.TypeOf((*MockClient)(nil).UpdateESHotContentTopologySize), ctx, topology)
}
